name: BSN Frontend pipeline

on:
  push:
    branches:
      - ci/pipeline
    paths:
      - book-network-ui/**
      - docker/frontend/**
      - 'docker-compose.yaml'
      - .github/workflows/*-frontend.yaml

#apt-get install jq or yum install jq

jobs:
  build-image:
    name: Build Frontend Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Extract project version
        id: extract_version
        run: |
          cd book-network-ui
          echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push to Dockerhub
        uses: docker/docker-push-action@v5
        with:
          context: book-network-ui
          file: docker/frontend/Dockerfile
          push: true

          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bsn-ui:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/bsn-ui:latest
  deploy:
    name: Deploy frontend
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
      - name: Create deployment folder
        run: ssh ${{ secrets.VPS_USERNAME }}@{{ secrets.VPS_IP }} "mkdir -p ci-cd"

      - name: Copy docker compose file
        run: scp docker-compose.yaml ${{ secrets.VPS_USERNAME }}@{{ secrets.VPS_IP }}:ci-cd/docker-compose.yaml

      - name: Set ENV variables and Deploy
        run: |
          ssh ${{ secrets.VPS_USERNAME }}@{{ secrets.VPS_IP }} <<EOF
          cd ci-cd
          docker-compose -f docker-compose.yaml pull -q
          docker-compose -f docker-compose.yaml up -d
          EOF
